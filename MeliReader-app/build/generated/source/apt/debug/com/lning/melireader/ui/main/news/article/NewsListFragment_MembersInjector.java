// Generated by Dagger (https://google.github.io/dagger).
package com.lning.melireader.ui.main.news.article;

import com.lning.melireader.core.ui.fragment.BaseFragment_MembersInjector;
import com.lning.melireader.presenter.NewsListPresenter;
import dagger.MembersInjector;
import javax.inject.Provider;
import me.drakeet.multitype.Items;
import me.drakeet.multitype.MultiTypeAdapter;

public final class NewsListFragment_MembersInjector implements MembersInjector<NewsListFragment> {
  private final Provider<NewsListPresenter> mPresenterProvider;

  private final Provider<MultiTypeAdapter> mMultiTypeAdapterProvider;

  private final Provider<Items> mItemsProvider;

  public NewsListFragment_MembersInjector(
      Provider<NewsListPresenter> mPresenterProvider,
      Provider<MultiTypeAdapter> mMultiTypeAdapterProvider,
      Provider<Items> mItemsProvider) {
    this.mPresenterProvider = mPresenterProvider;
    this.mMultiTypeAdapterProvider = mMultiTypeAdapterProvider;
    this.mItemsProvider = mItemsProvider;
  }

  public static MembersInjector<NewsListFragment> create(
      Provider<NewsListPresenter> mPresenterProvider,
      Provider<MultiTypeAdapter> mMultiTypeAdapterProvider,
      Provider<Items> mItemsProvider) {
    return new NewsListFragment_MembersInjector(
        mPresenterProvider, mMultiTypeAdapterProvider, mItemsProvider);
  }

  @Override
  public void injectMembers(NewsListFragment instance) {
    BaseFragment_MembersInjector.injectMPresenter(instance, mPresenterProvider.get());
    injectMMultiTypeAdapter(instance, mMultiTypeAdapterProvider.get());
    injectMItems(instance, mItemsProvider.get());
  }

  public static void injectMMultiTypeAdapter(
      NewsListFragment instance, MultiTypeAdapter mMultiTypeAdapter) {
    instance.mMultiTypeAdapter = mMultiTypeAdapter;
  }

  public static void injectMItems(NewsListFragment instance, Items mItems) {
    instance.mItems = mItems;
  }
}
