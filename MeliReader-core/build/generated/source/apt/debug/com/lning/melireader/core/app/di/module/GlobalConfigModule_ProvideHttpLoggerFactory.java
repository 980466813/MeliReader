// Generated by Dagger (https://google.github.io/dagger).
package com.lning.melireader.core.app.di.module;

import com.lning.melireader.core.repository.http.log.HttpLogger;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class GlobalConfigModule_ProvideHttpLoggerFactory implements Factory<HttpLogger> {
  private final GlobalConfigModule module;

  public GlobalConfigModule_ProvideHttpLoggerFactory(GlobalConfigModule module) {
    this.module = module;
  }

  @Override
  public HttpLogger get() {
    return Preconditions.checkNotNull(
        module.provideHttpLogger(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static GlobalConfigModule_ProvideHttpLoggerFactory create(GlobalConfigModule module) {
    return new GlobalConfigModule_ProvideHttpLoggerFactory(module);
  }

  public static HttpLogger proxyProvideHttpLogger(GlobalConfigModule instance) {
    return Preconditions.checkNotNull(
        instance.provideHttpLogger(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
