// Generated by Dagger (https://google.github.io/dagger).
package com.lning.melireader.core.app.di.module;

import com.lning.melireader.core.repository.http.interceptor.DebugInterceptor;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class GlobalConfigModule_ProvideRequestsInterceptorLevelFactory
    implements Factory<DebugInterceptor.Level> {
  private final GlobalConfigModule module;

  public GlobalConfigModule_ProvideRequestsInterceptorLevelFactory(GlobalConfigModule module) {
    this.module = module;
  }

  @Override
  public DebugInterceptor.Level get() {
    return Preconditions.checkNotNull(
        module.provideRequestsInterceptorLevel(),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static GlobalConfigModule_ProvideRequestsInterceptorLevelFactory create(
      GlobalConfigModule module) {
    return new GlobalConfigModule_ProvideRequestsInterceptorLevelFactory(module);
  }

  public static DebugInterceptor.Level proxyProvideRequestsInterceptorLevel(
      GlobalConfigModule instance) {
    return Preconditions.checkNotNull(
        instance.provideRequestsInterceptorLevel(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
