// Generated by Dagger (https://google.github.io/dagger).
package com.lning.melireader.presenter;

import com.lning.melireader.model.impl.LikeModel;
import com.lning.melireader.model.impl.NewsModel;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class NewsCommentPresenter_MembersInjector
    implements MembersInjector<NewsCommentPresenter> {
  private final Provider<NewsModel> newsModelProvider;

  private final Provider<LikeModel> likeModelProvider;

  public NewsCommentPresenter_MembersInjector(
      Provider<NewsModel> newsModelProvider, Provider<LikeModel> likeModelProvider) {
    this.newsModelProvider = newsModelProvider;
    this.likeModelProvider = likeModelProvider;
  }

  public static MembersInjector<NewsCommentPresenter> create(
      Provider<NewsModel> newsModelProvider, Provider<LikeModel> likeModelProvider) {
    return new NewsCommentPresenter_MembersInjector(newsModelProvider, likeModelProvider);
  }

  @Override
  public void injectMembers(NewsCommentPresenter instance) {
    injectNewsModel(instance, newsModelProvider.get());
    injectLikeModel(instance, likeModelProvider.get());
  }

  public static void injectNewsModel(NewsCommentPresenter instance, NewsModel newsModel) {
    instance.newsModel = newsModel;
  }

  public static void injectLikeModel(NewsCommentPresenter instance, LikeModel likeModel) {
    instance.likeModel = likeModel;
  }
}
