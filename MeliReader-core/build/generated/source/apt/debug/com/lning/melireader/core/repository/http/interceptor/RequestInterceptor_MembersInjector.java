// Generated by Dagger (https://google.github.io/dagger).
package com.lning.melireader.core.repository.http.interceptor;

import com.lning.melireader.core.repository.http.params.ParamsAdder;
import com.lning.melireader.core.repository.http.validator.DataValidator;
import com.lning.melireader.core.repository.preference.PreferencesHelper;
import dagger.MembersInjector;
import java.util.List;
import javax.inject.Provider;

public final class RequestInterceptor_MembersInjector
    implements MembersInjector<RequestInterceptor> {
  private final Provider<List<DataValidator>> dataValidatorsProvider;

  private final Provider<List<ParamsAdder>> paramsAddersProvider;

  private final Provider<Boolean> validateProvider;

  private final Provider<PreferencesHelper> mPreferencesHelperProvider;

  public RequestInterceptor_MembersInjector(
      Provider<List<DataValidator>> dataValidatorsProvider,
      Provider<List<ParamsAdder>> paramsAddersProvider,
      Provider<Boolean> validateProvider,
      Provider<PreferencesHelper> mPreferencesHelperProvider) {
    this.dataValidatorsProvider = dataValidatorsProvider;
    this.paramsAddersProvider = paramsAddersProvider;
    this.validateProvider = validateProvider;
    this.mPreferencesHelperProvider = mPreferencesHelperProvider;
  }

  public static MembersInjector<RequestInterceptor> create(
      Provider<List<DataValidator>> dataValidatorsProvider,
      Provider<List<ParamsAdder>> paramsAddersProvider,
      Provider<Boolean> validateProvider,
      Provider<PreferencesHelper> mPreferencesHelperProvider) {
    return new RequestInterceptor_MembersInjector(
        dataValidatorsProvider, paramsAddersProvider, validateProvider, mPreferencesHelperProvider);
  }

  @Override
  public void injectMembers(RequestInterceptor instance) {
    injectDataValidators(instance, dataValidatorsProvider.get());
    injectParamsAdders(instance, paramsAddersProvider.get());
    injectValidate(instance, validateProvider.get());
    injectMPreferencesHelper(instance, mPreferencesHelperProvider.get());
  }

  public static void injectDataValidators(
      RequestInterceptor instance, List<DataValidator> dataValidators) {
    instance.dataValidators = dataValidators;
  }

  public static void injectParamsAdders(
      RequestInterceptor instance, List<ParamsAdder> paramsAdders) {
    instance.paramsAdders = paramsAdders;
  }

  public static void injectValidate(RequestInterceptor instance, boolean validate) {
    instance.validate = validate;
  }

  public static void injectMPreferencesHelper(
      RequestInterceptor instance, PreferencesHelper mPreferencesHelper) {
    instance.mPreferencesHelper = mPreferencesHelper;
  }
}
