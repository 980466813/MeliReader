// Generated by Dagger (https://google.github.io/dagger).
package com.lning.melireader.presenter;

import com.lning.melireader.model.impl.HistoryModel;
import com.lning.melireader.model.impl.UserModel;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class HistoryListPresenter_Factory implements Factory<HistoryListPresenter> {
  private final Provider<HistoryModel> mMvpModelProvider;

  private final Provider<UserModel> userModelProvider;

  public HistoryListPresenter_Factory(
      Provider<HistoryModel> mMvpModelProvider, Provider<UserModel> userModelProvider) {
    this.mMvpModelProvider = mMvpModelProvider;
    this.userModelProvider = userModelProvider;
  }

  @Override
  public HistoryListPresenter get() {
    HistoryListPresenter instance = new HistoryListPresenter(mMvpModelProvider.get());
    HistoryListPresenter_MembersInjector.injectUserModel(instance, userModelProvider.get());
    return instance;
  }

  public static HistoryListPresenter_Factory create(
      Provider<HistoryModel> mMvpModelProvider, Provider<UserModel> userModelProvider) {
    return new HistoryListPresenter_Factory(mMvpModelProvider, userModelProvider);
  }

  public static HistoryListPresenter newHistoryListPresenter(HistoryModel mMvpModel) {
    return new HistoryListPresenter(mMvpModel);
  }
}
