// Generated by Dagger (https://google.github.io/dagger).
package com.lning.melireader.app.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import me.drakeet.multitype.Items;

public final class FragmentModule_ProvideItemsFactory implements Factory<Items> {
  private final FragmentModule module;

  public FragmentModule_ProvideItemsFactory(FragmentModule module) {
    this.module = module;
  }

  @Override
  public Items get() {
    return Preconditions.checkNotNull(
        module.provideItems(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static FragmentModule_ProvideItemsFactory create(FragmentModule module) {
    return new FragmentModule_ProvideItemsFactory(module);
  }

  public static Items proxyProvideItems(FragmentModule instance) {
    return Preconditions.checkNotNull(
        instance.provideItems(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
