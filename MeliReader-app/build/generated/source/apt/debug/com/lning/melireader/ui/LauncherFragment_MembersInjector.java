// Generated by Dagger (https://google.github.io/dagger).
package com.lning.melireader.ui;

import com.lning.melireader.core.ui.fragment.BaseFragment_MembersInjector;
import com.lning.melireader.presenter.LauncherPresenter;
import com.tbruyelle.rxpermissions2.RxPermissions;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class LauncherFragment_MembersInjector implements MembersInjector<LauncherFragment> {
  private final Provider<LauncherPresenter> mPresenterProvider;

  private final Provider<RxPermissions> rxPermissionsProvider;

  public LauncherFragment_MembersInjector(
      Provider<LauncherPresenter> mPresenterProvider,
      Provider<RxPermissions> rxPermissionsProvider) {
    this.mPresenterProvider = mPresenterProvider;
    this.rxPermissionsProvider = rxPermissionsProvider;
  }

  public static MembersInjector<LauncherFragment> create(
      Provider<LauncherPresenter> mPresenterProvider,
      Provider<RxPermissions> rxPermissionsProvider) {
    return new LauncherFragment_MembersInjector(mPresenterProvider, rxPermissionsProvider);
  }

  @Override
  public void injectMembers(LauncherFragment instance) {
    BaseFragment_MembersInjector.injectMPresenter(instance, mPresenterProvider.get());
    injectRxPermissions(instance, rxPermissionsProvider.get());
  }

  public static void injectRxPermissions(LauncherFragment instance, RxPermissions rxPermissions) {
    instance.rxPermissions = rxPermissions;
  }
}
