// Generated by Dagger (https://google.github.io/dagger).
package com.lning.melireader.core.app.di.module;

import com.lning.melireader.core.repository.http.validator.DataValidator;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import java.util.List;

public final class GlobalConfigModule_ProvideDataValidatorsFactory
    implements Factory<List<DataValidator>> {
  private final GlobalConfigModule module;

  public GlobalConfigModule_ProvideDataValidatorsFactory(GlobalConfigModule module) {
    this.module = module;
  }

  @Override
  public List<DataValidator> get() {
    return Preconditions.checkNotNull(
        module.provideDataValidators(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static GlobalConfigModule_ProvideDataValidatorsFactory create(GlobalConfigModule module) {
    return new GlobalConfigModule_ProvideDataValidatorsFactory(module);
  }

  public static List<DataValidator> proxyProvideDataValidators(GlobalConfigModule instance) {
    return Preconditions.checkNotNull(
        instance.provideDataValidators(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
