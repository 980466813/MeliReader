// Generated by Dagger (https://google.github.io/dagger).
package com.lning.melireader.presenter;

import com.lning.melireader.model.impl.FavouriteModel;
import com.lning.melireader.model.impl.UserModel;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class LauncherPresenter_MembersInjector implements MembersInjector<LauncherPresenter> {
  private final Provider<UserModel> userModelProvider;

  private final Provider<FavouriteModel> favouriteModelProvider;

  public LauncherPresenter_MembersInjector(
      Provider<UserModel> userModelProvider, Provider<FavouriteModel> favouriteModelProvider) {
    this.userModelProvider = userModelProvider;
    this.favouriteModelProvider = favouriteModelProvider;
  }

  public static MembersInjector<LauncherPresenter> create(
      Provider<UserModel> userModelProvider, Provider<FavouriteModel> favouriteModelProvider) {
    return new LauncherPresenter_MembersInjector(userModelProvider, favouriteModelProvider);
  }

  @Override
  public void injectMembers(LauncherPresenter instance) {
    injectUserModel(instance, userModelProvider.get());
    injectFavouriteModel(instance, favouriteModelProvider.get());
  }

  public static void injectUserModel(LauncherPresenter instance, UserModel userModel) {
    instance.userModel = userModel;
  }

  public static void injectFavouriteModel(
      LauncherPresenter instance, FavouriteModel favouriteModel) {
    instance.favouriteModel = favouriteModel;
  }
}
