// Generated by Dagger (https://google.github.io/dagger).
package com.lning.melireader.core.repository.http.interceptor;

import com.lning.melireader.core.repository.http.log.HttpLogger;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class DebugInterceptor_MembersInjector implements MembersInjector<DebugInterceptor> {
  private final Provider<Boolean> debugProvider;

  private final Provider<HttpLogger> loggerProvider;

  private final Provider<DebugInterceptor.Level> levelProvider;

  public DebugInterceptor_MembersInjector(
      Provider<Boolean> debugProvider,
      Provider<HttpLogger> loggerProvider,
      Provider<DebugInterceptor.Level> levelProvider) {
    this.debugProvider = debugProvider;
    this.loggerProvider = loggerProvider;
    this.levelProvider = levelProvider;
  }

  public static MembersInjector<DebugInterceptor> create(
      Provider<Boolean> debugProvider,
      Provider<HttpLogger> loggerProvider,
      Provider<DebugInterceptor.Level> levelProvider) {
    return new DebugInterceptor_MembersInjector(debugProvider, loggerProvider, levelProvider);
  }

  @Override
  public void injectMembers(DebugInterceptor instance) {
    injectDebug(instance, debugProvider.get());
    injectLogger(instance, loggerProvider.get());
    injectLevel(instance, levelProvider.get());
  }

  public static void injectDebug(DebugInterceptor instance, boolean debug) {
    instance.debug = debug;
  }

  public static void injectLogger(DebugInterceptor instance, HttpLogger logger) {
    instance.logger = logger;
  }

  public static void injectLevel(DebugInterceptor instance, DebugInterceptor.Level level) {
    instance.level = level;
  }
}
