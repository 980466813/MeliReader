// Generated by Dagger (https://google.github.io/dagger).
package com.lning.melireader.ui.main.user.collection;

import com.lning.melireader.core.ui.fragment.BaseFragment_MembersInjector;
import com.lning.melireader.presenter.CollectionListPresenter;
import dagger.MembersInjector;
import javax.inject.Provider;
import me.drakeet.multitype.Items;
import me.drakeet.multitype.MultiTypeAdapter;

public final class CollectionListFragment_MembersInjector
    implements MembersInjector<CollectionListFragment> {
  private final Provider<CollectionListPresenter> mPresenterProvider;

  private final Provider<MultiTypeAdapter> mMultiTypeAdapterProvider;

  private final Provider<Items> mItemsProvider;

  public CollectionListFragment_MembersInjector(
      Provider<CollectionListPresenter> mPresenterProvider,
      Provider<MultiTypeAdapter> mMultiTypeAdapterProvider,
      Provider<Items> mItemsProvider) {
    this.mPresenterProvider = mPresenterProvider;
    this.mMultiTypeAdapterProvider = mMultiTypeAdapterProvider;
    this.mItemsProvider = mItemsProvider;
  }

  public static MembersInjector<CollectionListFragment> create(
      Provider<CollectionListPresenter> mPresenterProvider,
      Provider<MultiTypeAdapter> mMultiTypeAdapterProvider,
      Provider<Items> mItemsProvider) {
    return new CollectionListFragment_MembersInjector(
        mPresenterProvider, mMultiTypeAdapterProvider, mItemsProvider);
  }

  @Override
  public void injectMembers(CollectionListFragment instance) {
    BaseFragment_MembersInjector.injectMPresenter(instance, mPresenterProvider.get());
    injectMMultiTypeAdapter(instance, mMultiTypeAdapterProvider.get());
    injectMItems(instance, mItemsProvider.get());
  }

  public static void injectMMultiTypeAdapter(
      CollectionListFragment instance, MultiTypeAdapter mMultiTypeAdapter) {
    instance.mMultiTypeAdapter = mMultiTypeAdapter;
  }

  public static void injectMItems(CollectionListFragment instance, Items mItems) {
    instance.mItems = mItems;
  }
}
