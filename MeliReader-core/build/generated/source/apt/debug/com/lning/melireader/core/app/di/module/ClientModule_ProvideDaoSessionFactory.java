// Generated by Dagger (https://google.github.io/dagger).
package com.lning.melireader.core.app.di.module;

import android.app.Application;
import com.lning.melireader.core.repository.db.dao.DaoSession;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class ClientModule_ProvideDaoSessionFactory implements Factory<DaoSession> {
  private final Provider<Application> applicationProvider;

  private final Provider<String> dbNameProvider;

  public ClientModule_ProvideDaoSessionFactory(
      Provider<Application> applicationProvider, Provider<String> dbNameProvider) {
    this.applicationProvider = applicationProvider;
    this.dbNameProvider = dbNameProvider;
  }

  @Override
  public DaoSession get() {
    return Preconditions.checkNotNull(
        ClientModule.provideDaoSession(applicationProvider.get(), dbNameProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static ClientModule_ProvideDaoSessionFactory create(
      Provider<Application> applicationProvider, Provider<String> dbNameProvider) {
    return new ClientModule_ProvideDaoSessionFactory(applicationProvider, dbNameProvider);
  }

  public static DaoSession proxyProvideDaoSession(Application application, String dbName) {
    return Preconditions.checkNotNull(
        ClientModule.provideDaoSession(application, dbName),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
