// Generated by Dagger (https://google.github.io/dagger).
package com.lning.melireader.core.repository;

import com.lning.melireader.core.repository.db.DatabaseHelper;
import com.lning.melireader.core.repository.http.HttpHelper;
import com.lning.melireader.core.repository.preference.PreferencesHelper;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class RepositoryManagerImpl_Factory implements Factory<RepositoryManagerImpl> {
  private final Provider<PreferencesHelper> preferencesHelperProvider;

  private final Provider<HttpHelper> httpHelperProvider;

  private final Provider<DatabaseHelper> databaseHelperProvider;

  public RepositoryManagerImpl_Factory(
      Provider<PreferencesHelper> preferencesHelperProvider,
      Provider<HttpHelper> httpHelperProvider,
      Provider<DatabaseHelper> databaseHelperProvider) {
    this.preferencesHelperProvider = preferencesHelperProvider;
    this.httpHelperProvider = httpHelperProvider;
    this.databaseHelperProvider = databaseHelperProvider;
  }

  @Override
  public RepositoryManagerImpl get() {
    return new RepositoryManagerImpl(
        preferencesHelperProvider.get(), httpHelperProvider.get(), databaseHelperProvider.get());
  }

  public static RepositoryManagerImpl_Factory create(
      Provider<PreferencesHelper> preferencesHelperProvider,
      Provider<HttpHelper> httpHelperProvider,
      Provider<DatabaseHelper> databaseHelperProvider) {
    return new RepositoryManagerImpl_Factory(
        preferencesHelperProvider, httpHelperProvider, databaseHelperProvider);
  }
}
